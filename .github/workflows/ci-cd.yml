name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # BUILD PHASE (Your existing CI)
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: client/yarn.lock
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: client
      
      - name: Build project
        run: yarn build
        working-directory: client

      # Verify build output
      - name: Verify build output
        run: |
          echo "📁 Checking if Sidebar.html was generated..."
          if [ -f "Sidebar.html" ]; then
            echo "✅ Sidebar.html found!"
            ls -la Sidebar.html
          else
            echo "❌ Sidebar.html not found! Build might have failed."
            echo "Current directory contents:"
            ls -la
            exit 1
          fi

      # DEPLOY PHASE (Only on push to main, not on PRs)
      - name: Deploy to Apps Script
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          SCRIPT_ID: ${{ secrets.SCRIPT_ID }}
        run: |
          npm install googleapis
          
          # Deploy using Apps Script API directly
          node -e "
            const { google } = require('googleapis');
            const fs = require('fs');
            
            async function deployToAppsScript() {
              try {
                console.log('🔐 Authenticating with Google Apps Script API...');
                
                // Parse credentials
                const credentials = JSON.parse(process.env.GOOGLE_CREDENTIALS);
                
                // Create auth client
                const auth = new google.auth.GoogleAuth({
                  credentials: credentials,
                  scopes: ['https://www.googleapis.com/auth/script.projects']
                });
                
                const script = google.script({ version: 'v1', auth });
                
                console.log('📁 Reading project files...');
                
                // Prepare files array
                const files = [];
                
                // Add Code.js
                if (fs.existsSync('Code.js')) {
                  const codeContent = fs.readFileSync('Code.js', 'utf8');
                  files.push({
                    name: 'Code',
                    type: 'SERVER_JS',
                    source: codeContent
                  });
                  console.log('✅ Code.js added (' + codeContent.length + ' characters)');
                } else {
                  console.log('⚠️ Code.js not found');
                }
                
                // Add Sidebar.html
                if (fs.existsSync('Sidebar.html')) {
                  const htmlContent = fs.readFileSync('Sidebar.html', 'utf8');
                  files.push({
                    name: 'Sidebar',
                    type: 'HTML',
                    source: htmlContent
                  });
                  console.log('✅ Sidebar.html added (' + htmlContent.length + ' characters)');
                } else {
                  console.log('⚠️ Sidebar.html not found');
                }
                
                // Add appsscript.json if it exists
                if (fs.existsSync('appsscript.json')) {
                  const manifestContent = fs.readFileSync('appsscript.json', 'utf8');
                  files.push({
                    name: 'appsscript',
                    type: 'JSON',
                    source: manifestContent
                  });
                  console.log('✅ appsscript.json added');
                } else {
                  console.log('ℹ️ appsscript.json not found (Apps Script will use defaults)');
                }
                
                if (files.length === 0) {
                  throw new Error('❌ No files found to deploy');
                }
                
                console.log('🚀 Deploying ' + files.length + ' files to Apps Script...');
                console.log('📋 Script ID: ' + process.env.SCRIPT_ID);
                
                // Update the project
                const response = await script.projects.updateContent({
                  scriptId: process.env.SCRIPT_ID,
                  requestBody: {
                    files: files
                  }
                });
                
                console.log('✅ Deployment successful!');
                console.log('📄 Files deployed: ' + files.map(f => f.name).join(', '));
                console.log('🔗 Script ID: ' + response.data.scriptId);
                
                // Optional: Create a version/deployment
                try {
                  console.log('🌐 Creating deployment version...');
                  const versionResponse = await script.projects.versions.create({
                    scriptId: process.env.SCRIPT_ID,
                    requestBody: {
                      description: 'Automated deployment from GitHub Actions - ' + new Date().toISOString()
                    }
                  });
                  console.log('✅ Version created: ' + versionResponse.data.versionNumber);
                } catch (versionError) {
                  console.log('⚠️ Version creation failed (this is optional):', versionError.message);
                }
                
              } catch (error) {
                console.error('❌ Deployment failed:', error.message);
                if (error.response) {
                  console.error('API Error:', error.response.data);
                }
                process.exit(1);
              }
            }
            
            deployToAppsScript();
          "
          
          echo "✅ Files pushed successfully!"
          
      - name: Deployment Summary
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Files pushed to Apps Script via API" >> $GITHUB_STEP_SUMMARY
          echo "- 📄 Deployed files: Code.js, Sidebar.html" >> $GITHUB_STEP_SUMMARY
          if [ -f "appsscript.json" ]; then
            echo "- 📄 appsscript.json: Included" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 📄 appsscript.json: Not found (using defaults)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- 🕐 Deployment time: $(date)" >> $GITHUB_STEP_SUMMARY